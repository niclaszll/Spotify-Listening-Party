version: "3.5"

services:
  reverse-proxy:
    image: traefik:v2.3
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    networks:
      - app-network
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  frontend:
    build:
      context: ./frontend
    restart: always
    volumes:
      - ./frontend:/home/node
      - /home/node/node_modules
    networks:
      - app-network
    labels:
      - "traefik.backend=frontend"
      - "traefik.http.routers.frontend.rule=Host(`${DEV_URL}`)"
      # the middleware 'add-context' must be defined so that the regex rules can be attached to it
      - "traefik.http.routers.frontend.middlewares=add-context"
      - "traefik.http.middlewares.add-context.redirectregex.regex=^http:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.add-context.redirectregex.replacement=http://$$1/frontend"
    env_file:
      - .env

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./api:/home/node
      - /home/node/node_modules
    networks:
      - app-network
    labels:
      - "traefik.backend=api"
      - "traefik.http.routers.api.rule=Host(`${DEV_URL}`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/backend"
    env_file:
      - .env
      
networks:
  app-network:
    name: app-network
