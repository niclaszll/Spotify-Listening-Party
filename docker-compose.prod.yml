version: "3.5"

services:
  reverse-proxy:
    image: traefik:v2.3
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      # use when testing because of letsencrypt rate limiting!
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      # The HTTP(S) ports
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - "./letsencrypt:/letsencrypt"
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"
    env_file:
      - .env

  frontend:
    image: public.ecr.aws/r4y0e1p4/spotify-listening-party-frontend:master
    restart: always
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.backend=frontend"
      - "traefik.http.routers.frontend.rule=Host(`${PROD_URL}`) && PathPrefix(`/frontend`)"
      # https
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    env_file:
      - ./frontend/.env
      - .env

  api:
    image: public.ecr.aws/r4y0e1p4/spotify-listening-party-api:master
    restart: always
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.backend=api"
      - "traefik.http.routers.api.rule=Host(`${PROD_URL}`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/backend"
      # https
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    env_file:
      - ./api/.env
      - .env

networks:
  app-network:
    name: app-network
    # mtu adjustment needed, else "apk add" will not work
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1420
